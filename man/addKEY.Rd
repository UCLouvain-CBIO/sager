% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keys.R
\name{addKEY,SummarizedExperiment-method}
\alias{addKEY,SummarizedExperiment-method}
\alias{addKEY}
\alias{addKEY,Spectra-method}
\alias{addKEY,QFeatures-method}
\alias{addKEY,PSM-method}
\title{Add a key to an object}
\usage{
\S4method{addKEY}{SummarizedExperiment}(object, vars = NULL, key = ".KEY", force = FALSE, sep = ".")

\S4method{addKEY}{Spectra}(object, vars = NULL, key = ".KEY", force = FALSE, sep = ".")

\S4method{addKEY}{QFeatures}(object, vars = NULL, key = ".KEY", force = FALSE, sep = ".")

\S4method{addKEY}{PSM}(object, vars = NULL, key = ".KEY", force = FALSE, sep = ".")
}
\arguments{
\item{object}{An instance of class \code{SummarizedExperiment},
\code{QFeatures}, \code{PSM} or \code{Spectra}.}

\item{vars}{\code{character()} referencing the variables to use to
create the key. These are to be found in the object's
\code{rowData} (for \code{SummarizedExperiment} and \code{QFeatures} objects)
or \code{spectraData} (for \code{Spectra} objects) or in the object
itself (for \code{PSM} objects). Throws an error if the variables
aren't found. Default is \code{NULL}.}

\item{key}{\code{character(1)} defining the key's name. Default is
\code{".KEY"}.}

\item{force}{\code{logical(1)} that defines is an existing key should
be overwritten. Default is \code{FALSE} and an error is thrown if
the key is already present.}

\item{sep}{\code{character(1)} specifying the separator when multiple
variables are pasted together to generate the key. Default is
\code{"."}.}
}
\description{
A key is a variable that is used to identify features within an
object. These features can refer to spectra in a \code{Spectra} object,
peptide-spectrum matches in a \code{PSM} object, or PSMs, peptides of
proteins in a \code{SummarizedExperiment} or \code{QFeatures} object. They
do not need to be unique.

The goal of a key is to identify matching features across data
types, such as for example to match de MS spectra to the PSMs and
peptides. These different data types can be stored together in an
\code{MsExperiment} object, and matched through one or multiple keys.
}
